body {
    font-family: sans-serif;
}

header {
    max-width: 58rem;
    margin: 0 auto;
}

/* Step 1: Style the all the menu links showing on the smallest screen */
/* Text styling goes on the anchor element to overwrite browser styles. 
Layout goes on the li elements. */

ul.menu {
    background-color: #191919;
    color: #f5f5f5;
}

ul.menu a {
    color: #f5f5f5;
    text-decoration: none;
    text-transform: uppercase;
    display: block;
}

ul.menu a:hover,
ul.menu a:active {
    background-color: #262626;
    border-radius: 5px;
}

ul.submenu > li a {
    text-decoration: none;
}

ul.submenu {
    padding: 0 1rem;
}

svg {
    display: none;
}

@media only screen and (min-width: 550px) {
    ul.menu {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    ul.menu li {
        text-align: center;
        line-height: 2;
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: auto;
        position: relative;
        white-space: nowrap;
    }

    ul.submenu {
        padding: 0;
    }

    svg {
        fill: #f5f5f5;
        display: block;
        width: 1rem;
        margin-left: 0.75rem;
    }

    li.dropdown > a {
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

/* step 2: position and hide the dropdown menu */
ul.submenu {
    padding: 0;
    background-color: #191919;
    border-radius: 0 0 5px 5px;
    position: absolute;
    left: 10%;
    visibility: hidden;
    opacity: 0;
    z-index: 100;
}

ul.submenu li {
    text-align: left;
}

ul.submenu > li {
    margin: 1rem;
}

/* step 3: add hover state that show the submenu */

ul.menu li:hover > ul {
    visibility: visible;
    opacity: 1;
}


/* Step 4: add transition to remove the clunkiness effect. Delaying the hover effect
 makes this more usable when accidentally moving your cursor off the menu. */
/* transitions all changing properties (visibility & opacity) with a duration of 0.5s
 and with a timing function of ease */

ul.submenu {
    transition: all 0.3s ease;
}


/* Step 5: add accessibility with the :focus-within state on the li's which will target the anchor tags inside*/

ul.menu li:focus-within > ul,
ul.menu li > ul:focus {
    visibility: visible;
    opacity: 1;
    display: block;
}

/* Test the tab navigation by tabbing through the webpage content */
/* https://webaim.org/techniques/keyboard/ */

ul.submenu {
    right: unset;
    left: 0;
}


/* Now tab through the content after adding this step */

